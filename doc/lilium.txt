*lilium.txt* High Contrast & Vivid Color Scheme based on Sonokai
*lilium*
>
                 _      _                       
                | | o  | | o                    
                | |    | |            _  _  _   
                |/  |  |/  |  |   |  / |/ |/ |  
                |__/|_/|__/|_/ \_/|_/  |  |  |_/

==============================================================================
CONTENTS                                     *lilium-contents*

Introduction                                 |lilium-introduction|
Installation                                 |lilium-installation|
Usage                                        |lilium-usage|
Configuration                                |lilium-configuration|
FAQ                                          |lilium-faq|

Note: Type |gO| in neovim to show the outline of contents.

==============================================================================
INTRODUCTION                                              *lilium-introduction*

I customized sainnhe/sonokai to make this theme, which gives it the following
features:

Features~

- High contrast but within acceptable range.
- Vivid colors.
- Highly customizable.
- Rich support for common file types and plugins.
- Tree-sitter support.
- Semantic highlighting support.
- Italic support ðŸŽ‰

I don't use status lines, so you'll need to tell me if those are not working
as you expect.

==============================================================================
INSTALLATION                                              *lilium-installation*

------------------------------------------------------------------------------

Via Plugin Manager~

    Take [vim-plug](https://github.com/junegunn/vim-plug) for example:
>
        Plug 'llimllib/lilium'
<
    For better syntax highlighting support, please install
    https://github.com/sheerun/vim-polyglot or https://github.com/nvim-treesitter/nvim-treesitter.

------------------------------------------------------------------------------

Via Pack Feature~

    1. Create a new directory: `$ mkdir -p ~/.vim/pack/colors/opt`

    2. Clone this repository: `$ git clone --depth 1 https://github.com/llimllib/lilium.git ~/.vim/pack/colors/opt/lilium`

    3. Generate help tags: `:helptags ~/.vim/pack/colors/opt/lilium/doc/`

    4. Add `packadd! lilium` to your vimrc.

Note: If you install this color scheme to `pack/*/start`, you still need to add `packadd! lilium` to your vimrc. [sainnhe/gruvbox-material#60](https://github.com/sainnhe/gruvbox-material/issues/60)

------------------------------------------------------------------------------

Manually~

    1. Clone the repository: `git clone --depth 1 https://github.com/llimllib/lilium.git`

    2. Copy `/path/to/lilium/autoload/lilium.vim` to
    `~/.vim/autoload/` .

    3. Copy `/path/to/lilium/colors/lilium.vim` to
    `~/.vim/colors/` .

    4. Copy `/path/to/lilium/doc/lilium.txt` to
    `~/.vim/doc/` and execute `:helptags ~/.vim/doc/` to generate help tags.

    5. To install [airline](https://github.com/vim-airline/vim-airline) theme,
    copy `/path/to/lilium/autoload/airline/themes/lilium.vim`
    to `~/.vim/autoload/airline/themes/` .

    6. To install [lightline](https://github.com/itchyny/lightline.vim) theme,
    copy `/path/to/lilium/autoload/lightline/colorscheme/lilium.vim`
    to `~/.vim/autoload/lightline/colorscheme/` .

    7. To install [lualine](https://github.com/nvim-lualine/lualine.nvim) theme,
    copy `/path/to/lilium/lua/lualine/themes/lilium.lua`
    to `~/.config/nvim/lua/lualine/themes/` .

==============================================================================
USAGE                                                            *lilium-usage*

------------------------------------------------------------------------------

Vim~

    Put something like this in your vimrc:
>
        " Important!!
        if has('termguicolors')
          set termguicolors
        endif

        " The configuration options should be placed before `colorscheme lilium`.
        let g:lilium_style = 'andromeda'
        let g:lilium_better_performance = 1

        colorscheme lilium
<
    See |lilium-configuration| for more configuration options.

    If you want to apply this color scheme temporarily, run this command in
    vim(this may cause broken colors):
>
        :colorscheme lilium
<
------------------------------------------------------------------------------

Airline~

    To enable [airline](https://github.com/vim-airline/vim-airline) color
    scheme, put this in your vimrc:
>
        let g:airline_theme = 'lilium'
<
    To apply it without reloading:
>
        :AirlineTheme lilium
<
------------------------------------------------------------------------------

Lightline~

    To enable [lightline](https://github.com/itchyny/lightline.vim) color
    scheme, put this in your vimrc:
>
        let g:lightline = {}
        let g:lightline.colorscheme = 'lilium'

        " Or this line:
        let g:lightline = {'colorscheme' : 'lilium'}
<
    To apply it without reloading:
>
        :let g:lightline.colorscheme = 'lilium'
        :call lightline#init()
        :call lightline#colorscheme()
<
------------------------------------------------------------------------------

Lualine~

    To enable [lualine](https://github.com/nvim-lualine/lualine.nvim) color
    scheme, put this in your init.lua:
>
        require'lualine'.setup {
          options = {
            theme = 'lilium'
          }
        }
<
    To apply it without reloading:
>
        :lua require'lualine'.setup {options = {theme = 'lilium'}}
<
==============================================================================
CONFIGURATION                                            *lilium-configuration*

Note: the configuration options should be placed before `colorscheme lilium`

E.g.
>
    if has('termguicolors')
      set termguicolors
    endif

    let g:lilium_style = 'andromeda'
    let g:lilium_better_performance = 1

    colorscheme lilium
    let g:lightline = {'colorscheme' : 'lilium'}
<
------------------------------------------------------------------------------
                                                               *g:lilium_style*
g:lilium_style~

The style of this color scheme.

    Type:               |String|
    Available values:   `'default'`, `'atlantis'`, `'andromeda'`, `'shusia'`, `'maia'`,
    `'espresso'`
    Default value:      `'default'`

------------------------------------------------------------------------------
                                              *g:lilium_disable_italic_comment*
g:lilium_disable_italic_comment~

By default, italic is enabled in `Comment`. To disable italic in `Comment`, set
this option to `1`.

    Type:               |Number|
    Available values:   `0`, `1`
    Default value:      `0`

------------------------------------------------------------------------------
                                                       *g:lilium_enable_italic*
g:lilium_enable_italic~

To enable italic in this color scheme, set this option to `1`.

    Type:               |Number|
    Available values:   `0`, `1`
    Default value:      `0`

Note: This option is designed to use with fonts that support cursive italics.
See |lilium-faq| for more information.

------------------------------------------------------------------------------
                                                              *g:lilium_cursor*
g:lilium_cursor~

Customize the cursor color, only works in GUI clients.

    Type:               |String|
    Available values:   `'auto'`, `'red'`, `'orange'`, `'yellow'`, `'green'`,
    `'blue'`, `'purple'`
    Default value:      `'auto'`

------------------------------------------------------------------------------
                                              *g:lilium_transparent_background*
g:lilium_transparent_background~

To use transparent background, set this option to `1`.

If you want more ui components to be transparent (for example, status line
background), set this option to `2`.

    Type:               |Number|
    Available values:   `0`, `1`, `2`
    Default value:      `0`

------------------------------------------------------------------------------
                                                *g:lilium_dim_inactive_windows*
g:lilium_dim_inactive_windows~

Dim inactive windows. Only works in neovim currently.

    Type:               |Number|
    Available values:   `0`, `1`
    Default value:      `0`

------------------------------------------------------------------------------
                                           *g:lilium_menu_selection_background*
g:lilium_menu_selection_background~

Customize the background color of |hl-PmenuSel| and |hl-WildMenu|.

    Type:               |String|
    Available values:   `'blue'`, `'green'`, `'red'`
    Default value:      `'blue'`

------------------------------------------------------------------------------
                                                    *g:lilium_spell_foreground*
g:lilium_spell_foreground~

By default, this color scheme won't color the foreground of |spell|, instead
colored under curls will be used. If you also want to color the foreground,
set this option to `'colored'`.

    Type:               |String|
    Available values:   `'none'`, `'colored'`
    Default value:      `'none'`

------------------------------------------------------------------------------
                                                            *g:lilium_show_eob*
g:lilium_show_eob~

Whether to show |hl-EndOfBuffer|.

    Type:               |Number|
    Available values:   `1`, `0`
    Default value:      `1`

------------------------------------------------------------------------------
                                           *g:lilium_diagnostic_text_highlight*
g:lilium_diagnostic_text_highlight~

Some plugins support highlighting error/warning/info/hint texts, by default
these texts are only underlined, but you can use this option to also highlight
the background of them.

    Type:               |Number|
    Available values:   `0`, `1`
    Default value:      `0`

Currently, the following plugins are supported:

- neovim's built-in language server client
- https://github.com/neoclide/coc.nvim
- https://github.com/prabirshrestha/vim-lsp
- https://github.com/ycm-core/YouCompleteMe
- https://github.com/dense-analysis/ale
- https://github.com/neomake/neomake
- https://github.com/vim-syntastic/syntastic

------------------------------------------------------------------------------
                                           *g:lilium_diagnostic_line_highlight*
g:lilium_diagnostic_line_highlight~

Some plugins support highlighting error/warning/info/hint lines, but this
feature is disabled by default in this color scheme. To enable this feature,
set this option to `1`.

    Type:               |Number|
    Available values:   `0`, `1`
    Default value:      `0`

Currently, the following plugins are supported:

- https://github.com/neoclide/coc.nvim
- https://github.com/ycm-core/YouCompleteMe
- https://github.com/dense-analysis/ale
- https://github.com/vim-syntastic/syntastic

------------------------------------------------------------------------------
                                             *g:lilium_diagnostic_virtual_text*
g:lilium_diagnostic_virtual_text~

Some plugins can use the virtual text feature of Neovim to display
error/warning/info/hint information. You can use this option to adjust the
way these virtual texts are highlighted.

    Type:               |String|
    Available values:   `'grey'`, `'colored'`, `'highlighted'`
    Default value:      `'grey'`

Currently, the following plugins are supported:

- Neovim's built-in language server client
- https://github.com/neoclide/coc.nvim
- https://github.com/prabirshrestha/vim-lsp
- https://github.com/dense-analysis/ale
- https://github.com/neomake/neomake
- https://github.com/ycm-core/YouCompleteMe

------------------------------------------------------------------------------
                                                        *g:lilium_current_word*
g:lilium_current_word~

Some plugins can highlight the word under current cursor, you can use this
option to control their behavior.

    Type:               |String|
    Available values:   `'grey background'`, `'bold'`, `'underline'`, `'italic'`
    Default value:      `'grey background'` when not in transparent mode, `'bold'`
    when in transparent mode.

Currently, the following plugins are supported:

- https://github.com/neoclide/coc-highlight
- https://github.com/dominikduda/vim_current_word
- https://github.com/RRethy/vim-illuminate
- https://github.com/itchyny/vim-cursorword
- https://github.com/prabirshrestha/vim-lsp

------------------------------------------------------------------------------
                                             *g:lilium_disable_terminal_colors*
g:lilium_disable_terminal_colors~

Setting this option to `1` will disable terminal colors provided by this color
scheme so you can remain terminal colors the same when using |:terminal| in
vim and outside of vim.

    Type:               |Number|
    Available values:   `0`, `1`
    Default value:      `0`

------------------------------------------------------------------------------
                                              *g:lilium_lightline_disable_bold*
g:lilium_lightline_disable_bold~

By default, bold is enabled in lightline color scheme. To disable bold in
lightline color scheme, set this option to `1`.

    Type:               |Number|
    Available values:   `0`, `1`
    Default value:      `0`

Note: this configuration option doesn't need to be placed before `colorscheme lilium`

------------------------------------------------------------------------------
                                                  *g:lilium_better_performance*
g:lilium_better_performance~

The loading time of this color scheme is very long because too many file types
and plugins are optimized. This feature allows you to load part of the code on
demand by placing them in the `after/syntax` directory.

Enabling this option will reduce loading time by approximately 50%.

    Type:               |Number|
    Available values:   `0`, `1`
    Default value:      `0`

------------------------------------------------------------------------------
                                                     *g:lilium_colors_override*
g:lilium_colors_override~

Override color palette. The available keys can be found in
`/path/to/lilium/autoload/lilium.vim`.

E.g.
>
    let g:lilium_colors_override = {'bg0': ['#1e222a', '235'], 'bg2': ['#282c34', '236']}
    colorscheme lilium
<
    Type:               |Dictionary|
    Default value:      `{}`

==============================================================================
FAQ                                                                *lilium-faq*

------------------------------------------------------------------------------

The colors don't match those in the screenshots.~

1. This color scheme is mainly designed for true colors, `set termguicolors`
is required. Check output of `vim --version`, maybe your vim doesn't support
`termguicolors`.

2. Maybe your terminal emulator doesn't support true colors, you can test it
using [this script](https://unix.stackexchange.com/questions/404414/print-true-color-24-bit-test-pattern).

3. If you are running vim in tmux, you need to override default true colors of
tmux, as tmux cannot display true colors properly:
[#1246 How to use true colors in vim under tmux?](https://github.com/tmux/tmux/issues/1246)

------------------------------------------------------------------------------

The configuration options don't work.~

You should place them before `colorscheme lilium` .

------------------------------------------------------------------------------

A lot of errors are detected if I install with pack feature.~

You'll need to add `packadd! lilium` before applying this color scheme.
Check [sainnhe/gruvbox-material#60](https://github.com/sainnhe/gruvbox-material/issues/60)

------------------------------------------------------------------------------

How to enable cursive italic keywords?~

1. Install a font that supports cursive italics, for example https://aka.sainnhe.dev/fonts

2. Enable italic keywords in this color scheme: `let g:lilium_enable_italic = 1`

3. (Optional) Disable italic comment: `let g:lilium_disable_italic_comment = 1`

------------------------------------------------------------------------------

The comment color looks weird.~

Some terminal emulators don't support italics, which may cause the comment
color looks weird. See https://github.com/sainnhe/gruvbox-material/issues/5#issuecomment-729586348

A temporary solution is to disable italic comments via
|g:lilium_disable_italic_comment|.

If you are using tmux, you may also need to override default true colors of
tmux: https://github.com/tmux/tmux/issues/1246

------------------------------------------------------------------------------

How to use custom colors?~
>
    function! s:lilium_custom() abort
      " Link a highlight group to a predefined highlight group.
      " See `colors/lilium.vim` for all predefined highlight groups.
      highlight! link groupA groupB
      highlight! link groupC groupD
    
      " Initialize the color palette.
      " The first parameter is a valid value for `g:lilium_style`,
      " and the second parameter is a valid value for `g:lilium_colors_override`.
      let l:palette = lilium#get_palette('atlantis', {})
      " Define a highlight group.
      " The first parameter is the name of a highlight group,
      " the second parameter is the foreground color,
      " the third parameter is the background color,
      " the fourth parameter is for UI highlighting which is optional,
      " and the last parameter is for `guisp` which is also optional.
      " See `autoload/lilium.vim` for the format of `l:palette`.
      call lilium#highlight('groupE', l:palette.red, l:palette.none, 'undercurl', l:palette.red)
    endfunction
    
    augroup liliumCustom
      autocmd!
      autocmd ColorScheme lilium call s:lilium_custom()
    augroup END
    
    colorscheme lilium
<
Note: Make sure to define the `augroup` before declare the `colorscheme`.

==============================================================================
vim:tw=78:nosta:noet:ts=8:sts=0:ft=help:et:sw=4:fen:fdm=marker:fmr={{{,}}}:
